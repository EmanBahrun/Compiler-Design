Terminals unused in grammar

   ARRAY
   ELESE
   TRUE
   FALSE
   COLON


State 8 conflicts: 1 reduce/reduce
State 14 conflicts: 1 reduce/reduce
State 67 conflicts: 11 shift/reduce
State 91 conflicts: 11 shift/reduce
State 92 conflicts: 11 shift/reduce
State 93 conflicts: 11 shift/reduce
State 94 conflicts: 11 shift/reduce
State 95 conflicts: 11 shift/reduce
State 96 conflicts: 11 shift/reduce
State 97 conflicts: 11 shift/reduce
State 98 conflicts: 11 shift/reduce
State 99 conflicts: 11 shift/reduce
State 100 conflicts: 11 shift/reduce
State 101 conflicts: 11 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | functions

    3 functions: function
    4          | function functions

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements RBRACE

    6 arguments: %empty
    7          | argument COMMA arguments
    8          | argument

    9 argument: INTEGERVAR IDENTIFIER
   10         | %empty

   11 statements: %empty
   12           | statement SEMICOLON statements

   13 statement: declaration
   14          | function_call
   15          | if_statement
   16          | while_statement
   17          | return_statement
   18          | assign_statement
   19          | CONTINUE SEMICOLON
   20          | BREAK SEMICOLON
   21          | PRINT expression SEMICOLON
   22          | GET IDENTIFIER SEMICOLON

   23 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements LBRACE
   24             | IF L_PAREN booleanexpression R_PAREN LBRACE statements LBRACE else_statement

   25 else_statement: ELSE LBRACE statements RBRACE
   26               | ELSE if_statement

   27 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE

   28 return_statement: RETURN SEMICOLON
   29                 | RETURN expression SEMICOLON

   30 assign_statement: IDENTIFIER ASSIGN expression SEMICOLON
   31                 | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression SEMICOLON
   32                 | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN ARRAYFILL INTEGER SEMICOLON

   33 expression: IDENTIFIER
   34           | INTEGER
   35           | integerexpression
   36           | booleanexpression
   37           | arrayexpression

   38 integerexpression: expression ADD expression
   39                  | expression SUB expression
   40                  | expression MULT expression
   41                  | expression DIV expression
   42                  | expression MOD expression
   43                  | L_PAREN expression R_PAREN

   44 booleanexpression: expression EQ expression
   45                  | expression NEQ expression
   46                  | expression LT expression
   47                  | expression GT expression
   48                  | expression LTE expression
   49                  | expression GTE expression
   50                  | NOT expression

   51 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET

   52 declaration: INTEGER IDENTIFIER SEMICOLON

   53 function_call: IDENTIFIER L_PAREN params R_PAREN

   54 params: %empty
   55       | param COMMA params

   56 param: INTEGER
   57      | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 32 34 52 56
IDENTIFIER (259) 5 9 22 30 31 32 33 51 52 53 57
FUNCTION (260) 5
ARRAY (261)
ARRAYFILL (262) 32
IF (263) 23 24
ELESE (264)
WHILE (265) 27
CONTINUE (266) 19
BREAK (267) 20
GET (268) 22
PRINT (269) 21
NOT (270) 50
TRUE (271)
FALSE (272)
RETURN (273) 28 29
SEMICOLON (274) 12 19 20 21 22 28 29 30 31 32 52
COLON (275)
COMMA (276) 7 55
L_PAREN (277) 5 23 24 27 43 53
R_PAREN (278) 5 23 24 27 43 53
L_SQUARE_BRACKET (279) 31 32 51
R_SQUARE_BRACKET (280) 31 32 51
ASSIGN (281) 30 31 32
LBRACE (282) 5 23 24 25 27
RBRACE (283) 5 25 27
ADD (284) 38
SUB (285) 39
MULT (286) 40
DIV (287) 41
MOD (288) 42
EQ (289) 44
NEQ (290) 45
LT (291) 46
GT (292) 47
LTE (293) 48
GTE (294) 49
INTEGERVAR (295) 9
ELSE (296) 25 26


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
prog_start (43)
    on left: 1 2, on right: 0
functions (44)
    on left: 3 4, on right: 2 4
function (45)
    on left: 5, on right: 3 4
arguments (46)
    on left: 6 7 8, on right: 5 7
argument (47)
    on left: 9 10, on right: 7 8
statements (48)
    on left: 11 12, on right: 5 12 23 24 25 27
statement (49)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 12
if_statement (50)
    on left: 23 24, on right: 15 26
else_statement (51)
    on left: 25 26, on right: 24
while_statement (52)
    on left: 27, on right: 16
return_statement (53)
    on left: 28 29, on right: 17
assign_statement (54)
    on left: 30 31 32, on right: 18
expression (55)
    on left: 33 34 35 36 37, on right: 21 29 30 31 32 38 39 40 41 42
    43 44 45 46 47 48 49 50
integerexpression (56)
    on left: 38 39 40 41 42 43, on right: 35 51
booleanexpression (57)
    on left: 44 45 46 47 48 49 50, on right: 23 24 27 36
arrayexpression (58)
    on left: 51, on right: 37
declaration (59)
    on left: 52, on right: 13
function_call (60)
    on left: 53, on right: 14
params (61)
    on left: 54 55, on right: 53 55
param (62)
    on left: 56 57, on right: 55


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    5 function: FUNCTION . IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    2 prog_start: functions .

    $default  reduce using rule 2 (prog_start)


State 4

    3 functions: function .
    4          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    5 function: FUNCTION IDENTIFIER . L_PAREN arguments R_PAREN LBRACE statements RBRACE

    L_PAREN  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 8

    5 function: FUNCTION IDENTIFIER L_PAREN . arguments R_PAREN LBRACE statements RBRACE

    INTEGERVAR  shift, and go to state 9

    COMMA     reduce using rule 10 (argument)
    R_PAREN   reduce using rule 6 (arguments)
    R_PAREN   [reduce using rule 10 (argument)]
    $default  reduce using rule 6 (arguments)

    arguments  go to state 10
    argument   go to state 11


State 9

    9 argument: INTEGERVAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 10

    5 function: FUNCTION IDENTIFIER L_PAREN arguments . R_PAREN LBRACE statements RBRACE

    R_PAREN  shift, and go to state 13


State 11

    7 arguments: argument . COMMA arguments
    8          | argument .

    COMMA  shift, and go to state 14

    $default  reduce using rule 8 (arguments)


State 12

    9 argument: INTEGERVAR IDENTIFIER .

    $default  reduce using rule 9 (argument)


State 13

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 15


State 14

    7 arguments: argument COMMA . arguments

    INTEGERVAR  shift, and go to state 9

    COMMA     reduce using rule 10 (argument)
    R_PAREN   reduce using rule 6 (arguments)
    R_PAREN   [reduce using rule 10 (argument)]
    $default  reduce using rule 6 (arguments)

    arguments  go to state 16
    argument   go to state 11


State 15

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE . statements RBRACE

    INTEGER     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25

    $default  reduce using rule 11 (statements)

    statements        go to state 26
    statement         go to state 27
    if_statement      go to state 28
    while_statement   go to state 29
    return_statement  go to state 30
    assign_statement  go to state 31
    declaration       go to state 32
    function_call     go to state 33


State 16

    7 arguments: argument COMMA arguments .

    $default  reduce using rule 7 (arguments)


State 17

   52 declaration: INTEGER . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 34


State 18

   30 assign_statement: IDENTIFIER . ASSIGN expression SEMICOLON
   31                 | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression SEMICOLON
   32                 | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN ARRAYFILL INTEGER SEMICOLON
   53 function_call: IDENTIFIER . L_PAREN params R_PAREN

    L_PAREN           shift, and go to state 35
    L_SQUARE_BRACKET  shift, and go to state 36
    ASSIGN            shift, and go to state 37


State 19

   23 if_statement: IF . L_PAREN booleanexpression R_PAREN LBRACE statements LBRACE
   24             | IF . L_PAREN booleanexpression R_PAREN LBRACE statements LBRACE else_statement

    L_PAREN  shift, and go to state 38


State 20

   27 while_statement: WHILE . L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE

    L_PAREN  shift, and go to state 39


State 21

   19 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 22

   20 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 23

   22 statement: GET . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 42


State 24

   21 statement: PRINT . expression SEMICOLON

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 47
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 25

   28 return_statement: RETURN . SEMICOLON
   29                 | RETURN . expression SEMICOLON

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    SEMICOLON   shift, and go to state 51
    L_PAREN     shift, and go to state 46

    expression         go to state 52
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 26

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 53


State 27

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 54


State 28

   15 statement: if_statement .

    $default  reduce using rule 15 (statement)


State 29

   16 statement: while_statement .

    $default  reduce using rule 16 (statement)


State 30

   17 statement: return_statement .

    $default  reduce using rule 17 (statement)


State 31

   18 statement: assign_statement .

    $default  reduce using rule 18 (statement)


State 32

   13 statement: declaration .

    $default  reduce using rule 13 (statement)


State 33

   14 statement: function_call .

    $default  reduce using rule 14 (statement)


State 34

   52 declaration: INTEGER IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 35

   53 function_call: IDENTIFIER L_PAREN . params R_PAREN

    INTEGER     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 54 (params)

    params  go to state 58
    param   go to state 59


State 36

   31 assign_statement: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression SEMICOLON
   32                 | IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN ARRAYFILL INTEGER SEMICOLON

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 60
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 37

   30 assign_statement: IDENTIFIER ASSIGN . expression SEMICOLON

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 61
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 38

   23 if_statement: IF L_PAREN . booleanexpression R_PAREN LBRACE statements LBRACE
   24             | IF L_PAREN . booleanexpression R_PAREN LBRACE statements LBRACE else_statement

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 62
    integerexpression  go to state 48
    booleanexpression  go to state 63
    arrayexpression    go to state 50


State 39

   27 while_statement: WHILE L_PAREN . booleanexpression R_PAREN LBRACE statements RBRACE

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 62
    integerexpression  go to state 48
    booleanexpression  go to state 64
    arrayexpression    go to state 50


State 40

   19 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 19 (statement)


State 41

   20 statement: BREAK SEMICOLON .

    $default  reduce using rule 20 (statement)


State 42

   22 statement: GET IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 43

   34 expression: INTEGER .

    $default  reduce using rule 34 (expression)


State 44

   33 expression: IDENTIFIER .
   51 arrayexpression: IDENTIFIER . L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 33 (expression)


State 45

   50 booleanexpression: NOT . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 67
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 46

   43 integerexpression: L_PAREN . expression R_PAREN

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 68
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 47

   21 statement: PRINT expression . SEMICOLON
   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    SEMICOLON  shift, and go to state 69
    ADD        shift, and go to state 70
    SUB        shift, and go to state 71
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    EQ         shift, and go to state 75
    NEQ        shift, and go to state 76
    LT         shift, and go to state 77
    GT         shift, and go to state 78
    LTE        shift, and go to state 79
    GTE        shift, and go to state 80


State 48

   35 expression: integerexpression .

    $default  reduce using rule 35 (expression)


State 49

   36 expression: booleanexpression .

    $default  reduce using rule 36 (expression)


State 50

   37 expression: arrayexpression .

    $default  reduce using rule 37 (expression)


State 51

   28 return_statement: RETURN SEMICOLON .

    $default  reduce using rule 28 (return_statement)


State 52

   29 return_statement: RETURN expression . SEMICOLON
   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    SEMICOLON  shift, and go to state 81
    ADD        shift, and go to state 70
    SUB        shift, and go to state 71
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    EQ         shift, and go to state 75
    NEQ        shift, and go to state 76
    LT         shift, and go to state 77
    GT         shift, and go to state 78
    LTE        shift, and go to state 79
    GTE        shift, and go to state 80


State 53

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements RBRACE .

    $default  reduce using rule 5 (function)


State 54

   12 statements: statement SEMICOLON . statements

    INTEGER     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25

    $default  reduce using rule 11 (statements)

    statements        go to state 82
    statement         go to state 27
    if_statement      go to state 28
    while_statement   go to state 29
    return_statement  go to state 30
    assign_statement  go to state 31
    declaration       go to state 32
    function_call     go to state 33


State 55

   52 declaration: INTEGER IDENTIFIER SEMICOLON .

    $default  reduce using rule 52 (declaration)


State 56

   56 param: INTEGER .

    $default  reduce using rule 56 (param)


State 57

   57 param: IDENTIFIER .

    $default  reduce using rule 57 (param)


State 58

   53 function_call: IDENTIFIER L_PAREN params . R_PAREN

    R_PAREN  shift, and go to state 83


State 59

   55 params: param . COMMA params

    COMMA  shift, and go to state 84


State 60

   31 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression SEMICOLON
   32                 | IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN ARRAYFILL INTEGER SEMICOLON
   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    R_SQUARE_BRACKET  shift, and go to state 85
    ADD               shift, and go to state 70
    SUB               shift, and go to state 71
    MULT              shift, and go to state 72
    DIV               shift, and go to state 73
    MOD               shift, and go to state 74
    EQ                shift, and go to state 75
    NEQ               shift, and go to state 76
    LT                shift, and go to state 77
    GT                shift, and go to state 78
    LTE               shift, and go to state 79
    GTE               shift, and go to state 80


State 61

   30 assign_statement: IDENTIFIER ASSIGN expression . SEMICOLON
   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    SEMICOLON  shift, and go to state 86
    ADD        shift, and go to state 70
    SUB        shift, and go to state 71
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    EQ         shift, and go to state 75
    NEQ        shift, and go to state 76
    LT         shift, and go to state 77
    GT         shift, and go to state 78
    LTE        shift, and go to state 79
    GTE        shift, and go to state 80


State 62

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80


State 63

   23 if_statement: IF L_PAREN booleanexpression . R_PAREN LBRACE statements LBRACE
   24             | IF L_PAREN booleanexpression . R_PAREN LBRACE statements LBRACE else_statement
   36 expression: booleanexpression .

    R_PAREN  shift, and go to state 87

    $default  reduce using rule 36 (expression)


State 64

   27 while_statement: WHILE L_PAREN booleanexpression . R_PAREN LBRACE statements RBRACE
   36 expression: booleanexpression .

    R_PAREN  shift, and go to state 88

    $default  reduce using rule 36 (expression)


State 65

   22 statement: GET IDENTIFIER SEMICOLON .

    $default  reduce using rule 22 (statement)


State 66

   51 arrayexpression: IDENTIFIER L_SQUARE_BRACKET . integerexpression R_SQUARE_BRACKET

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 62
    integerexpression  go to state 89
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 67

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression
   50                  | NOT expression .

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 50 (booleanexpression)]
    SUB       [reduce using rule 50 (booleanexpression)]
    MULT      [reduce using rule 50 (booleanexpression)]
    DIV       [reduce using rule 50 (booleanexpression)]
    MOD       [reduce using rule 50 (booleanexpression)]
    EQ        [reduce using rule 50 (booleanexpression)]
    NEQ       [reduce using rule 50 (booleanexpression)]
    LT        [reduce using rule 50 (booleanexpression)]
    GT        [reduce using rule 50 (booleanexpression)]
    LTE       [reduce using rule 50 (booleanexpression)]
    GTE       [reduce using rule 50 (booleanexpression)]
    $default  reduce using rule 50 (booleanexpression)


State 68

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   43                  | L_PAREN expression . R_PAREN
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    R_PAREN  shift, and go to state 90
    ADD      shift, and go to state 70
    SUB      shift, and go to state 71
    MULT     shift, and go to state 72
    DIV      shift, and go to state 73
    MOD      shift, and go to state 74
    EQ       shift, and go to state 75
    NEQ      shift, and go to state 76
    LT       shift, and go to state 77
    GT       shift, and go to state 78
    LTE      shift, and go to state 79
    GTE      shift, and go to state 80


State 69

   21 statement: PRINT expression SEMICOLON .

    $default  reduce using rule 21 (statement)


State 70

   38 integerexpression: expression ADD . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 91
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 71

   39 integerexpression: expression SUB . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 92
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 72

   40 integerexpression: expression MULT . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 93
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 73

   41 integerexpression: expression DIV . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 94
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 74

   42 integerexpression: expression MOD . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 95
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 75

   44 booleanexpression: expression EQ . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 96
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 76

   45 booleanexpression: expression NEQ . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 97
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 77

   46 booleanexpression: expression LT . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 98
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 78

   47 booleanexpression: expression GT . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 99
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 79

   48 booleanexpression: expression LTE . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 100
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 80

   49 booleanexpression: expression GTE . expression

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 101
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 81

   29 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 29 (return_statement)


State 82

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 83

   53 function_call: IDENTIFIER L_PAREN params R_PAREN .

    $default  reduce using rule 53 (function_call)


State 84

   55 params: param COMMA . params

    INTEGER     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 54 (params)

    params  go to state 102
    param   go to state 59


State 85

   31 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression SEMICOLON
   32                 | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN ARRAYFILL INTEGER SEMICOLON

    ASSIGN  shift, and go to state 103


State 86

   30 assign_statement: IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 30 (assign_statement)


State 87

   23 if_statement: IF L_PAREN booleanexpression R_PAREN . LBRACE statements LBRACE
   24             | IF L_PAREN booleanexpression R_PAREN . LBRACE statements LBRACE else_statement

    LBRACE  shift, and go to state 104


State 88

   27 while_statement: WHILE L_PAREN booleanexpression R_PAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 105


State 89

   35 expression: integerexpression .
   51 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 106

    $default  reduce using rule 35 (expression)


State 90

   43 integerexpression: L_PAREN expression R_PAREN .

    $default  reduce using rule 43 (integerexpression)


State 91

   38 integerexpression: expression . ADD expression
   38                  | expression ADD expression .
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 38 (integerexpression)]
    SUB       [reduce using rule 38 (integerexpression)]
    MULT      [reduce using rule 38 (integerexpression)]
    DIV       [reduce using rule 38 (integerexpression)]
    MOD       [reduce using rule 38 (integerexpression)]
    EQ        [reduce using rule 38 (integerexpression)]
    NEQ       [reduce using rule 38 (integerexpression)]
    LT        [reduce using rule 38 (integerexpression)]
    GT        [reduce using rule 38 (integerexpression)]
    LTE       [reduce using rule 38 (integerexpression)]
    GTE       [reduce using rule 38 (integerexpression)]
    $default  reduce using rule 38 (integerexpression)


State 92

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   39                  | expression SUB expression .
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 39 (integerexpression)]
    SUB       [reduce using rule 39 (integerexpression)]
    MULT      [reduce using rule 39 (integerexpression)]
    DIV       [reduce using rule 39 (integerexpression)]
    MOD       [reduce using rule 39 (integerexpression)]
    EQ        [reduce using rule 39 (integerexpression)]
    NEQ       [reduce using rule 39 (integerexpression)]
    LT        [reduce using rule 39 (integerexpression)]
    GT        [reduce using rule 39 (integerexpression)]
    LTE       [reduce using rule 39 (integerexpression)]
    GTE       [reduce using rule 39 (integerexpression)]
    $default  reduce using rule 39 (integerexpression)


State 93

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   40                  | expression MULT expression .
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 40 (integerexpression)]
    SUB       [reduce using rule 40 (integerexpression)]
    MULT      [reduce using rule 40 (integerexpression)]
    DIV       [reduce using rule 40 (integerexpression)]
    MOD       [reduce using rule 40 (integerexpression)]
    EQ        [reduce using rule 40 (integerexpression)]
    NEQ       [reduce using rule 40 (integerexpression)]
    LT        [reduce using rule 40 (integerexpression)]
    GT        [reduce using rule 40 (integerexpression)]
    LTE       [reduce using rule 40 (integerexpression)]
    GTE       [reduce using rule 40 (integerexpression)]
    $default  reduce using rule 40 (integerexpression)


State 94

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   41                  | expression DIV expression .
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 41 (integerexpression)]
    SUB       [reduce using rule 41 (integerexpression)]
    MULT      [reduce using rule 41 (integerexpression)]
    DIV       [reduce using rule 41 (integerexpression)]
    MOD       [reduce using rule 41 (integerexpression)]
    EQ        [reduce using rule 41 (integerexpression)]
    NEQ       [reduce using rule 41 (integerexpression)]
    LT        [reduce using rule 41 (integerexpression)]
    GT        [reduce using rule 41 (integerexpression)]
    LTE       [reduce using rule 41 (integerexpression)]
    GTE       [reduce using rule 41 (integerexpression)]
    $default  reduce using rule 41 (integerexpression)


State 95

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   42                  | expression MOD expression .
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 42 (integerexpression)]
    SUB       [reduce using rule 42 (integerexpression)]
    MULT      [reduce using rule 42 (integerexpression)]
    DIV       [reduce using rule 42 (integerexpression)]
    MOD       [reduce using rule 42 (integerexpression)]
    EQ        [reduce using rule 42 (integerexpression)]
    NEQ       [reduce using rule 42 (integerexpression)]
    LT        [reduce using rule 42 (integerexpression)]
    GT        [reduce using rule 42 (integerexpression)]
    LTE       [reduce using rule 42 (integerexpression)]
    GTE       [reduce using rule 42 (integerexpression)]
    $default  reduce using rule 42 (integerexpression)


State 96

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   44                  | expression EQ expression .
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 44 (booleanexpression)]
    SUB       [reduce using rule 44 (booleanexpression)]
    MULT      [reduce using rule 44 (booleanexpression)]
    DIV       [reduce using rule 44 (booleanexpression)]
    MOD       [reduce using rule 44 (booleanexpression)]
    EQ        [reduce using rule 44 (booleanexpression)]
    NEQ       [reduce using rule 44 (booleanexpression)]
    LT        [reduce using rule 44 (booleanexpression)]
    GT        [reduce using rule 44 (booleanexpression)]
    LTE       [reduce using rule 44 (booleanexpression)]
    GTE       [reduce using rule 44 (booleanexpression)]
    $default  reduce using rule 44 (booleanexpression)


State 97

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   45                  | expression NEQ expression .
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 45 (booleanexpression)]
    SUB       [reduce using rule 45 (booleanexpression)]
    MULT      [reduce using rule 45 (booleanexpression)]
    DIV       [reduce using rule 45 (booleanexpression)]
    MOD       [reduce using rule 45 (booleanexpression)]
    EQ        [reduce using rule 45 (booleanexpression)]
    NEQ       [reduce using rule 45 (booleanexpression)]
    LT        [reduce using rule 45 (booleanexpression)]
    GT        [reduce using rule 45 (booleanexpression)]
    LTE       [reduce using rule 45 (booleanexpression)]
    GTE       [reduce using rule 45 (booleanexpression)]
    $default  reduce using rule 45 (booleanexpression)


State 98

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   46                  | expression LT expression .
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 46 (booleanexpression)]
    SUB       [reduce using rule 46 (booleanexpression)]
    MULT      [reduce using rule 46 (booleanexpression)]
    DIV       [reduce using rule 46 (booleanexpression)]
    MOD       [reduce using rule 46 (booleanexpression)]
    EQ        [reduce using rule 46 (booleanexpression)]
    NEQ       [reduce using rule 46 (booleanexpression)]
    LT        [reduce using rule 46 (booleanexpression)]
    GT        [reduce using rule 46 (booleanexpression)]
    LTE       [reduce using rule 46 (booleanexpression)]
    GTE       [reduce using rule 46 (booleanexpression)]
    $default  reduce using rule 46 (booleanexpression)


State 99

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   47                  | expression GT expression .
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 47 (booleanexpression)]
    SUB       [reduce using rule 47 (booleanexpression)]
    MULT      [reduce using rule 47 (booleanexpression)]
    DIV       [reduce using rule 47 (booleanexpression)]
    MOD       [reduce using rule 47 (booleanexpression)]
    EQ        [reduce using rule 47 (booleanexpression)]
    NEQ       [reduce using rule 47 (booleanexpression)]
    LT        [reduce using rule 47 (booleanexpression)]
    GT        [reduce using rule 47 (booleanexpression)]
    LTE       [reduce using rule 47 (booleanexpression)]
    GTE       [reduce using rule 47 (booleanexpression)]
    $default  reduce using rule 47 (booleanexpression)


State 100

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   48                  | expression LTE expression .
   49                  | expression . GTE expression

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 48 (booleanexpression)]
    SUB       [reduce using rule 48 (booleanexpression)]
    MULT      [reduce using rule 48 (booleanexpression)]
    DIV       [reduce using rule 48 (booleanexpression)]
    MOD       [reduce using rule 48 (booleanexpression)]
    EQ        [reduce using rule 48 (booleanexpression)]
    NEQ       [reduce using rule 48 (booleanexpression)]
    LT        [reduce using rule 48 (booleanexpression)]
    GT        [reduce using rule 48 (booleanexpression)]
    LTE       [reduce using rule 48 (booleanexpression)]
    GTE       [reduce using rule 48 (booleanexpression)]
    $default  reduce using rule 48 (booleanexpression)


State 101

   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression
   49                  | expression GTE expression .

    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MULT  shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76
    LT    shift, and go to state 77
    GT    shift, and go to state 78
    LTE   shift, and go to state 79
    GTE   shift, and go to state 80

    ADD       [reduce using rule 49 (booleanexpression)]
    SUB       [reduce using rule 49 (booleanexpression)]
    MULT      [reduce using rule 49 (booleanexpression)]
    DIV       [reduce using rule 49 (booleanexpression)]
    MOD       [reduce using rule 49 (booleanexpression)]
    EQ        [reduce using rule 49 (booleanexpression)]
    NEQ       [reduce using rule 49 (booleanexpression)]
    LT        [reduce using rule 49 (booleanexpression)]
    GT        [reduce using rule 49 (booleanexpression)]
    LTE       [reduce using rule 49 (booleanexpression)]
    GTE       [reduce using rule 49 (booleanexpression)]
    $default  reduce using rule 49 (booleanexpression)


State 102

   55 params: param COMMA params .

    $default  reduce using rule 55 (params)


State 103

   31 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression SEMICOLON
   32                 | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . ARRAYFILL INTEGER SEMICOLON

    INTEGER     shift, and go to state 43
    IDENTIFIER  shift, and go to state 44
    ARRAYFILL   shift, and go to state 107
    NOT         shift, and go to state 45
    L_PAREN     shift, and go to state 46

    expression         go to state 108
    integerexpression  go to state 48
    booleanexpression  go to state 49
    arrayexpression    go to state 50


State 104

   23 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE . statements LBRACE
   24             | IF L_PAREN booleanexpression R_PAREN LBRACE . statements LBRACE else_statement

    INTEGER     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25

    $default  reduce using rule 11 (statements)

    statements        go to state 109
    statement         go to state 27
    if_statement      go to state 28
    while_statement   go to state 29
    return_statement  go to state 30
    assign_statement  go to state 31
    declaration       go to state 32
    function_call     go to state 33


State 105

   27 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE . statements RBRACE

    INTEGER     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25

    $default  reduce using rule 11 (statements)

    statements        go to state 110
    statement         go to state 27
    if_statement      go to state 28
    while_statement   go to state 29
    return_statement  go to state 30
    assign_statement  go to state 31
    declaration       go to state 32
    function_call     go to state 33


State 106

   51 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET .

    $default  reduce using rule 51 (arrayexpression)


State 107

   32 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN ARRAYFILL . INTEGER SEMICOLON

    INTEGER  shift, and go to state 111


State 108

   31 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression . SEMICOLON
   38 integerexpression: expression . ADD expression
   39                  | expression . SUB expression
   40                  | expression . MULT expression
   41                  | expression . DIV expression
   42                  | expression . MOD expression
   44 booleanexpression: expression . EQ expression
   45                  | expression . NEQ expression
   46                  | expression . LT expression
   47                  | expression . GT expression
   48                  | expression . LTE expression
   49                  | expression . GTE expression

    SEMICOLON  shift, and go to state 112
    ADD        shift, and go to state 70
    SUB        shift, and go to state 71
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    EQ         shift, and go to state 75
    NEQ        shift, and go to state 76
    LT         shift, and go to state 77
    GT         shift, and go to state 78
    LTE        shift, and go to state 79
    GTE        shift, and go to state 80


State 109

   23 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements . LBRACE
   24             | IF L_PAREN booleanexpression R_PAREN LBRACE statements . LBRACE else_statement

    LBRACE  shift, and go to state 113


State 110

   27 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 114


State 111

   32 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN ARRAYFILL INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 112

   31 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression SEMICOLON .

    $default  reduce using rule 31 (assign_statement)


State 113

   23 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements LBRACE .
   24             | IF L_PAREN booleanexpression R_PAREN LBRACE statements LBRACE . else_statement

    ELSE  shift, and go to state 116

    $default  reduce using rule 23 (if_statement)

    else_statement  go to state 117


State 114

   27 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE .

    $default  reduce using rule 27 (while_statement)


State 115

   32 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN ARRAYFILL INTEGER SEMICOLON .

    $default  reduce using rule 32 (assign_statement)


State 116

   25 else_statement: ELSE . LBRACE statements RBRACE
   26               | ELSE . if_statement

    IF      shift, and go to state 19
    LBRACE  shift, and go to state 118

    if_statement  go to state 119


State 117

   24 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements LBRACE else_statement .

    $default  reduce using rule 24 (if_statement)


State 118

   25 else_statement: ELSE LBRACE . statements RBRACE

    INTEGER     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25

    $default  reduce using rule 11 (statements)

    statements        go to state 120
    statement         go to state 27
    if_statement      go to state 28
    while_statement   go to state 29
    return_statement  go to state 30
    assign_statement  go to state 31
    declaration       go to state 32
    function_call     go to state 33


State 119

   26 else_statement: ELSE if_statement .

    $default  reduce using rule 26 (else_statement)


State 120

   25 else_statement: ELSE LBRACE statements . RBRACE

    RBRACE  shift, and go to state 121


State 121

   25 else_statement: ELSE LBRACE statements RBRACE .

    $default  reduce using rule 25 (else_statement)
