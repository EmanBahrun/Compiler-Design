Terminals unused in grammar

   ELESE
   TRUE
   FALSE
   COLON


State 8 conflicts: 1 reduce/reduce
State 14 conflicts: 1 reduce/reduce
State 73 conflicts: 11 shift/reduce
State 96 conflicts: 11 shift/reduce
State 97 conflicts: 11 shift/reduce
State 98 conflicts: 11 shift/reduce
State 99 conflicts: 11 shift/reduce
State 100 conflicts: 11 shift/reduce
State 101 conflicts: 11 shift/reduce
State 102 conflicts: 11 shift/reduce
State 103 conflicts: 11 shift/reduce
State 104 conflicts: 11 shift/reduce
State 105 conflicts: 11 shift/reduce
State 106 conflicts: 11 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | functions

    3 functions: function
    4          | function functions

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements RBRACE

    6 arguments: %empty
    7          | argument COMMA arguments
    8          | argument

    9 argument: INTEGERVAR IDENTIFIER
   10         | %empty

   11 statements: %empty
   12           | statement statements

   13 statement: declaration SEMICOLON
   14          | function_call SEMICOLON
   15          | if_statement
   16          | while_statement
   17          | return_statement SEMICOLON
   18          | assign_statement SEMICOLON
   19          | CONTINUE SEMICOLON
   20          | BREAK SEMICOLON
   21          | PRINT expression SEMICOLON
   22          | GET IDENTIFIER SEMICOLON

   23 declaration: INTEGERVAR IDENTIFIER ASSIGN integerexpression
   24            | INTEGERVAR IDENTIFIER
   25            | ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

   26 function_call: IDENTIFIER L_PAREN params R_PAREN

   27 params: %empty
   28       | param COMMA params
   29       | param

   30 param: INTEGER
   31      | IDENTIFIER

   32 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE
   33             | IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE else_statement

   34 else_statement: ELSE LBRACE statements RBRACE

   35 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE

   36 return_statement: RETURN
   37                 | RETURN expression

   38 assign_statement: IDENTIFIER ASSIGN expression
   39                 | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

   40 expression: IDENTIFIER
   41           | integerexpression
   42           | booleanexpression
   43           | arrayexpression

   44 integerexpression: INTEGER
   45                  | expression ADD expression
   46                  | expression SUB expression
   47                  | expression MULT expression
   48                  | expression DIV expression
   49                  | expression MOD expression
   50                  | L_PAREN expression R_PAREN
   51                  | function_call

   52 booleanexpression: expression EQ expression
   53                  | expression NEQ expression
   54                  | expression LT expression
   55                  | expression GT expression
   56                  | expression LTE expression
   57                  | expression GTE expression
   58                  | NOT expression

   59 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 25 30 44
IDENTIFIER (259) 5 9 22 23 24 25 26 31 38 39 40 59
FUNCTION (260) 5
ARRAY (261) 25
ARRAYFILL (262) 25
IF (263) 32 33
ELESE (264)
WHILE (265) 35
CONTINUE (266) 19
BREAK (267) 20
GET (268) 22
PRINT (269) 21
NOT (270) 58
TRUE (271)
FALSE (272)
RETURN (273) 36 37
SEMICOLON (274) 13 14 17 18 19 20 21 22
COLON (275)
COMMA (276) 7 28
L_PAREN (277) 5 26 32 33 35 50
R_PAREN (278) 5 26 32 33 35 50
L_SQUARE_BRACKET (279) 25 39 59
R_SQUARE_BRACKET (280) 25 39 59
ASSIGN (281) 23 25 38 39
LBRACE (282) 5 32 33 34 35
RBRACE (283) 5 32 33 34 35
ADD (284) 45
SUB (285) 46
MULT (286) 47
DIV (287) 48
MOD (288) 49
EQ (289) 52
NEQ (290) 53
LT (291) 54
GT (292) 55
LTE (293) 56
GTE (294) 57
INTEGERVAR (295) 9 23 24
ELSE (296) 34


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
prog_start (43)
    on left: 1 2, on right: 0
functions (44)
    on left: 3 4, on right: 2 4
function (45)
    on left: 5, on right: 3 4
arguments (46)
    on left: 6 7 8, on right: 5 7
argument (47)
    on left: 9 10, on right: 7 8
statements (48)
    on left: 11 12, on right: 5 12 32 33 34 35
statement (49)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 12
declaration (50)
    on left: 23 24 25, on right: 13
function_call (51)
    on left: 26, on right: 14 51
params (52)
    on left: 27 28 29, on right: 26 28
param (53)
    on left: 30 31, on right: 28 29
if_statement (54)
    on left: 32 33, on right: 15
else_statement (55)
    on left: 34, on right: 33
while_statement (56)
    on left: 35, on right: 16
return_statement (57)
    on left: 36 37, on right: 17
assign_statement (58)
    on left: 38 39, on right: 18
expression (59)
    on left: 40 41 42 43, on right: 21 37 38 39 45 46 47 48 49 50 52
    53 54 55 56 57 58
integerexpression (60)
    on left: 44 45 46 47 48 49 50 51, on right: 23 41 59
booleanexpression (61)
    on left: 52 53 54 55 56 57 58, on right: 32 33 35 42
arrayexpression (62)
    on left: 59, on right: 43


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    5 function: FUNCTION . IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    2 prog_start: functions .

    $default  reduce using rule 2 (prog_start)


State 4

    3 functions: function .
    4          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    5 function: FUNCTION IDENTIFIER . L_PAREN arguments R_PAREN LBRACE statements RBRACE

    L_PAREN  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 8

    5 function: FUNCTION IDENTIFIER L_PAREN . arguments R_PAREN LBRACE statements RBRACE

    INTEGERVAR  shift, and go to state 9

    COMMA     reduce using rule 10 (argument)
    R_PAREN   reduce using rule 6 (arguments)
    R_PAREN   [reduce using rule 10 (argument)]
    $default  reduce using rule 6 (arguments)

    arguments  go to state 10
    argument   go to state 11


State 9

    9 argument: INTEGERVAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 10

    5 function: FUNCTION IDENTIFIER L_PAREN arguments . R_PAREN LBRACE statements RBRACE

    R_PAREN  shift, and go to state 13


State 11

    7 arguments: argument . COMMA arguments
    8          | argument .

    COMMA  shift, and go to state 14

    $default  reduce using rule 8 (arguments)


State 12

    9 argument: INTEGERVAR IDENTIFIER .

    $default  reduce using rule 9 (argument)


State 13

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 15


State 14

    7 arguments: argument COMMA . arguments

    INTEGERVAR  shift, and go to state 9

    COMMA     reduce using rule 10 (argument)
    R_PAREN   reduce using rule 6 (arguments)
    R_PAREN   [reduce using rule 10 (argument)]
    $default  reduce using rule 6 (arguments)

    arguments  go to state 16
    argument   go to state 11


State 15

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE . statements RBRACE

    IDENTIFIER  shift, and go to state 17
    ARRAY       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25
    INTEGERVAR  shift, and go to state 26

    $default  reduce using rule 11 (statements)

    statements        go to state 27
    statement         go to state 28
    declaration       go to state 29
    function_call     go to state 30
    if_statement      go to state 31
    while_statement   go to state 32
    return_statement  go to state 33
    assign_statement  go to state 34


State 16

    7 arguments: argument COMMA arguments .

    $default  reduce using rule 7 (arguments)


State 17

   26 function_call: IDENTIFIER . L_PAREN params R_PAREN
   38 assign_statement: IDENTIFIER . ASSIGN expression
   39                 | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN           shift, and go to state 35
    L_SQUARE_BRACKET  shift, and go to state 36
    ASSIGN            shift, and go to state 37


State 18

   25 declaration: ARRAY . IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 38


State 19

   32 if_statement: IF . L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE
   33             | IF . L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE else_statement

    L_PAREN  shift, and go to state 39


State 20

   35 while_statement: WHILE . L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE

    L_PAREN  shift, and go to state 40


State 21

   19 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 22

   20 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 23

   22 statement: GET . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 43


State 24

   21 statement: PRINT . expression SEMICOLON

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 49
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 25

   36 return_statement: RETURN .
   37                 | RETURN . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    $default  reduce using rule 36 (return_statement)

    function_call      go to state 48
    expression         go to state 53
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 26

   23 declaration: INTEGERVAR . IDENTIFIER ASSIGN integerexpression
   24            | INTEGERVAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 54


State 27

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 55


State 28

   12 statements: statement . statements

    IDENTIFIER  shift, and go to state 17
    ARRAY       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25
    INTEGERVAR  shift, and go to state 26

    $default  reduce using rule 11 (statements)

    statements        go to state 56
    statement         go to state 28
    declaration       go to state 29
    function_call     go to state 30
    if_statement      go to state 31
    while_statement   go to state 32
    return_statement  go to state 33
    assign_statement  go to state 34


State 29

   13 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 30

   14 statement: function_call . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 31

   15 statement: if_statement .

    $default  reduce using rule 15 (statement)


State 32

   16 statement: while_statement .

    $default  reduce using rule 16 (statement)


State 33

   17 statement: return_statement . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 34

   18 statement: assign_statement . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 35

   26 function_call: IDENTIFIER L_PAREN . params R_PAREN

    INTEGER     shift, and go to state 61
    IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 27 (params)

    params  go to state 63
    param   go to state 64


State 36

   39 assign_statement: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 65
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 37

   38 assign_statement: IDENTIFIER ASSIGN . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 66
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 38

   25 declaration: ARRAY IDENTIFIER . ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

    ASSIGN  shift, and go to state 67


State 39

   32 if_statement: IF L_PAREN . booleanexpression R_PAREN LBRACE statements RBRACE
   33             | IF L_PAREN . booleanexpression R_PAREN LBRACE statements RBRACE else_statement

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 68
    integerexpression  go to state 50
    booleanexpression  go to state 69
    arrayexpression    go to state 52


State 40

   35 while_statement: WHILE L_PAREN . booleanexpression R_PAREN LBRACE statements RBRACE

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 68
    integerexpression  go to state 50
    booleanexpression  go to state 70
    arrayexpression    go to state 52


State 41

   19 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 19 (statement)


State 42

   20 statement: BREAK SEMICOLON .

    $default  reduce using rule 20 (statement)


State 43

   22 statement: GET IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 44

   44 integerexpression: INTEGER .

    $default  reduce using rule 44 (integerexpression)


State 45

   26 function_call: IDENTIFIER . L_PAREN params R_PAREN
   40 expression: IDENTIFIER .
   59 arrayexpression: IDENTIFIER . L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 35
    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 40 (expression)


State 46

   58 booleanexpression: NOT . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 73
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 47

   50 integerexpression: L_PAREN . expression R_PAREN

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 74
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 48

   51 integerexpression: function_call .

    $default  reduce using rule 51 (integerexpression)


State 49

   21 statement: PRINT expression . SEMICOLON
   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    SEMICOLON  shift, and go to state 75
    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MULT       shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80
    EQ         shift, and go to state 81
    NEQ        shift, and go to state 82
    LT         shift, and go to state 83
    GT         shift, and go to state 84
    LTE        shift, and go to state 85
    GTE        shift, and go to state 86


State 50

   41 expression: integerexpression .

    $default  reduce using rule 41 (expression)


State 51

   42 expression: booleanexpression .

    $default  reduce using rule 42 (expression)


State 52

   43 expression: arrayexpression .

    $default  reduce using rule 43 (expression)


State 53

   37 return_statement: RETURN expression .
   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    $default  reduce using rule 37 (return_statement)


State 54

   23 declaration: INTEGERVAR IDENTIFIER . ASSIGN integerexpression
   24            | INTEGERVAR IDENTIFIER .

    ASSIGN  shift, and go to state 87

    $default  reduce using rule 24 (declaration)


State 55

    5 function: FUNCTION IDENTIFIER L_PAREN arguments R_PAREN LBRACE statements RBRACE .

    $default  reduce using rule 5 (function)


State 56

   12 statements: statement statements .

    $default  reduce using rule 12 (statements)


State 57

   13 statement: declaration SEMICOLON .

    $default  reduce using rule 13 (statement)


State 58

   14 statement: function_call SEMICOLON .

    $default  reduce using rule 14 (statement)


State 59

   17 statement: return_statement SEMICOLON .

    $default  reduce using rule 17 (statement)


State 60

   18 statement: assign_statement SEMICOLON .

    $default  reduce using rule 18 (statement)


State 61

   30 param: INTEGER .

    $default  reduce using rule 30 (param)


State 62

   31 param: IDENTIFIER .

    $default  reduce using rule 31 (param)


State 63

   26 function_call: IDENTIFIER L_PAREN params . R_PAREN

    R_PAREN  shift, and go to state 88


State 64

   28 params: param . COMMA params
   29       | param .

    COMMA  shift, and go to state 89

    $default  reduce using rule 29 (params)


State 65

   39 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression
   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    R_SQUARE_BRACKET  shift, and go to state 90
    ADD               shift, and go to state 76
    SUB               shift, and go to state 77
    MULT              shift, and go to state 78
    DIV               shift, and go to state 79
    MOD               shift, and go to state 80
    EQ                shift, and go to state 81
    NEQ               shift, and go to state 82
    LT                shift, and go to state 83
    GT                shift, and go to state 84
    LTE               shift, and go to state 85
    GTE               shift, and go to state 86


State 66

   38 assign_statement: IDENTIFIER ASSIGN expression .
   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    $default  reduce using rule 38 (assign_statement)


State 67

   25 declaration: ARRAY IDENTIFIER ASSIGN . L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 91


State 68

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86


State 69

   32 if_statement: IF L_PAREN booleanexpression . R_PAREN LBRACE statements RBRACE
   33             | IF L_PAREN booleanexpression . R_PAREN LBRACE statements RBRACE else_statement
   42 expression: booleanexpression .

    R_PAREN  shift, and go to state 92

    $default  reduce using rule 42 (expression)


State 70

   35 while_statement: WHILE L_PAREN booleanexpression . R_PAREN LBRACE statements RBRACE
   42 expression: booleanexpression .

    R_PAREN  shift, and go to state 93

    $default  reduce using rule 42 (expression)


State 71

   22 statement: GET IDENTIFIER SEMICOLON .

    $default  reduce using rule 22 (statement)


State 72

   59 arrayexpression: IDENTIFIER L_SQUARE_BRACKET . integerexpression R_SQUARE_BRACKET

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 68
    integerexpression  go to state 94
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 73

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression
   58                  | NOT expression .

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 58 (booleanexpression)]
    SUB       [reduce using rule 58 (booleanexpression)]
    MULT      [reduce using rule 58 (booleanexpression)]
    DIV       [reduce using rule 58 (booleanexpression)]
    MOD       [reduce using rule 58 (booleanexpression)]
    EQ        [reduce using rule 58 (booleanexpression)]
    NEQ       [reduce using rule 58 (booleanexpression)]
    LT        [reduce using rule 58 (booleanexpression)]
    GT        [reduce using rule 58 (booleanexpression)]
    LTE       [reduce using rule 58 (booleanexpression)]
    GTE       [reduce using rule 58 (booleanexpression)]
    $default  reduce using rule 58 (booleanexpression)


State 74

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   50                  | L_PAREN expression . R_PAREN
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    R_PAREN  shift, and go to state 95
    ADD      shift, and go to state 76
    SUB      shift, and go to state 77
    MULT     shift, and go to state 78
    DIV      shift, and go to state 79
    MOD      shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    LT       shift, and go to state 83
    GT       shift, and go to state 84
    LTE      shift, and go to state 85
    GTE      shift, and go to state 86


State 75

   21 statement: PRINT expression SEMICOLON .

    $default  reduce using rule 21 (statement)


State 76

   45 integerexpression: expression ADD . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 96
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 77

   46 integerexpression: expression SUB . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 97
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 78

   47 integerexpression: expression MULT . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 98
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 79

   48 integerexpression: expression DIV . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 99
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 80

   49 integerexpression: expression MOD . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 100
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 81

   52 booleanexpression: expression EQ . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 101
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 82

   53 booleanexpression: expression NEQ . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 102
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 83

   54 booleanexpression: expression LT . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 103
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 84

   55 booleanexpression: expression GT . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 104
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 85

   56 booleanexpression: expression LTE . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 105
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 86

   57 booleanexpression: expression GTE . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 106
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 87

   23 declaration: INTEGERVAR IDENTIFIER ASSIGN . integerexpression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 68
    integerexpression  go to state 107
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 88

   26 function_call: IDENTIFIER L_PAREN params R_PAREN .

    $default  reduce using rule 26 (function_call)


State 89

   28 params: param COMMA . params

    INTEGER     shift, and go to state 61
    IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 27 (params)

    params  go to state 108
    param   go to state 64


State 90

   39 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 109


State 91

   25 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET . ARRAYFILL INTEGER R_SQUARE_BRACKET

    ARRAYFILL  shift, and go to state 110


State 92

   32 if_statement: IF L_PAREN booleanexpression R_PAREN . LBRACE statements RBRACE
   33             | IF L_PAREN booleanexpression R_PAREN . LBRACE statements RBRACE else_statement

    LBRACE  shift, and go to state 111


State 93

   35 while_statement: WHILE L_PAREN booleanexpression R_PAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 112


State 94

   41 expression: integerexpression .
   59 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 113

    $default  reduce using rule 41 (expression)


State 95

   50 integerexpression: L_PAREN expression R_PAREN .

    $default  reduce using rule 50 (integerexpression)


State 96

   45 integerexpression: expression . ADD expression
   45                  | expression ADD expression .
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 45 (integerexpression)]
    SUB       [reduce using rule 45 (integerexpression)]
    MULT      [reduce using rule 45 (integerexpression)]
    DIV       [reduce using rule 45 (integerexpression)]
    MOD       [reduce using rule 45 (integerexpression)]
    EQ        [reduce using rule 45 (integerexpression)]
    NEQ       [reduce using rule 45 (integerexpression)]
    LT        [reduce using rule 45 (integerexpression)]
    GT        [reduce using rule 45 (integerexpression)]
    LTE       [reduce using rule 45 (integerexpression)]
    GTE       [reduce using rule 45 (integerexpression)]
    $default  reduce using rule 45 (integerexpression)


State 97

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   46                  | expression SUB expression .
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 46 (integerexpression)]
    SUB       [reduce using rule 46 (integerexpression)]
    MULT      [reduce using rule 46 (integerexpression)]
    DIV       [reduce using rule 46 (integerexpression)]
    MOD       [reduce using rule 46 (integerexpression)]
    EQ        [reduce using rule 46 (integerexpression)]
    NEQ       [reduce using rule 46 (integerexpression)]
    LT        [reduce using rule 46 (integerexpression)]
    GT        [reduce using rule 46 (integerexpression)]
    LTE       [reduce using rule 46 (integerexpression)]
    GTE       [reduce using rule 46 (integerexpression)]
    $default  reduce using rule 46 (integerexpression)


State 98

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   47                  | expression MULT expression .
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 47 (integerexpression)]
    SUB       [reduce using rule 47 (integerexpression)]
    MULT      [reduce using rule 47 (integerexpression)]
    DIV       [reduce using rule 47 (integerexpression)]
    MOD       [reduce using rule 47 (integerexpression)]
    EQ        [reduce using rule 47 (integerexpression)]
    NEQ       [reduce using rule 47 (integerexpression)]
    LT        [reduce using rule 47 (integerexpression)]
    GT        [reduce using rule 47 (integerexpression)]
    LTE       [reduce using rule 47 (integerexpression)]
    GTE       [reduce using rule 47 (integerexpression)]
    $default  reduce using rule 47 (integerexpression)


State 99

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   48                  | expression DIV expression .
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 48 (integerexpression)]
    SUB       [reduce using rule 48 (integerexpression)]
    MULT      [reduce using rule 48 (integerexpression)]
    DIV       [reduce using rule 48 (integerexpression)]
    MOD       [reduce using rule 48 (integerexpression)]
    EQ        [reduce using rule 48 (integerexpression)]
    NEQ       [reduce using rule 48 (integerexpression)]
    LT        [reduce using rule 48 (integerexpression)]
    GT        [reduce using rule 48 (integerexpression)]
    LTE       [reduce using rule 48 (integerexpression)]
    GTE       [reduce using rule 48 (integerexpression)]
    $default  reduce using rule 48 (integerexpression)


State 100

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   49                  | expression MOD expression .
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 49 (integerexpression)]
    SUB       [reduce using rule 49 (integerexpression)]
    MULT      [reduce using rule 49 (integerexpression)]
    DIV       [reduce using rule 49 (integerexpression)]
    MOD       [reduce using rule 49 (integerexpression)]
    EQ        [reduce using rule 49 (integerexpression)]
    NEQ       [reduce using rule 49 (integerexpression)]
    LT        [reduce using rule 49 (integerexpression)]
    GT        [reduce using rule 49 (integerexpression)]
    LTE       [reduce using rule 49 (integerexpression)]
    GTE       [reduce using rule 49 (integerexpression)]
    $default  reduce using rule 49 (integerexpression)


State 101

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   52                  | expression EQ expression .
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 52 (booleanexpression)]
    SUB       [reduce using rule 52 (booleanexpression)]
    MULT      [reduce using rule 52 (booleanexpression)]
    DIV       [reduce using rule 52 (booleanexpression)]
    MOD       [reduce using rule 52 (booleanexpression)]
    EQ        [reduce using rule 52 (booleanexpression)]
    NEQ       [reduce using rule 52 (booleanexpression)]
    LT        [reduce using rule 52 (booleanexpression)]
    GT        [reduce using rule 52 (booleanexpression)]
    LTE       [reduce using rule 52 (booleanexpression)]
    GTE       [reduce using rule 52 (booleanexpression)]
    $default  reduce using rule 52 (booleanexpression)


State 102

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   53                  | expression NEQ expression .
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 53 (booleanexpression)]
    SUB       [reduce using rule 53 (booleanexpression)]
    MULT      [reduce using rule 53 (booleanexpression)]
    DIV       [reduce using rule 53 (booleanexpression)]
    MOD       [reduce using rule 53 (booleanexpression)]
    EQ        [reduce using rule 53 (booleanexpression)]
    NEQ       [reduce using rule 53 (booleanexpression)]
    LT        [reduce using rule 53 (booleanexpression)]
    GT        [reduce using rule 53 (booleanexpression)]
    LTE       [reduce using rule 53 (booleanexpression)]
    GTE       [reduce using rule 53 (booleanexpression)]
    $default  reduce using rule 53 (booleanexpression)


State 103

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   54                  | expression LT expression .
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 54 (booleanexpression)]
    SUB       [reduce using rule 54 (booleanexpression)]
    MULT      [reduce using rule 54 (booleanexpression)]
    DIV       [reduce using rule 54 (booleanexpression)]
    MOD       [reduce using rule 54 (booleanexpression)]
    EQ        [reduce using rule 54 (booleanexpression)]
    NEQ       [reduce using rule 54 (booleanexpression)]
    LT        [reduce using rule 54 (booleanexpression)]
    GT        [reduce using rule 54 (booleanexpression)]
    LTE       [reduce using rule 54 (booleanexpression)]
    GTE       [reduce using rule 54 (booleanexpression)]
    $default  reduce using rule 54 (booleanexpression)


State 104

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   55                  | expression GT expression .
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 55 (booleanexpression)]
    SUB       [reduce using rule 55 (booleanexpression)]
    MULT      [reduce using rule 55 (booleanexpression)]
    DIV       [reduce using rule 55 (booleanexpression)]
    MOD       [reduce using rule 55 (booleanexpression)]
    EQ        [reduce using rule 55 (booleanexpression)]
    NEQ       [reduce using rule 55 (booleanexpression)]
    LT        [reduce using rule 55 (booleanexpression)]
    GT        [reduce using rule 55 (booleanexpression)]
    LTE       [reduce using rule 55 (booleanexpression)]
    GTE       [reduce using rule 55 (booleanexpression)]
    $default  reduce using rule 55 (booleanexpression)


State 105

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   56                  | expression LTE expression .
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 56 (booleanexpression)]
    SUB       [reduce using rule 56 (booleanexpression)]
    MULT      [reduce using rule 56 (booleanexpression)]
    DIV       [reduce using rule 56 (booleanexpression)]
    MOD       [reduce using rule 56 (booleanexpression)]
    EQ        [reduce using rule 56 (booleanexpression)]
    NEQ       [reduce using rule 56 (booleanexpression)]
    LT        [reduce using rule 56 (booleanexpression)]
    GT        [reduce using rule 56 (booleanexpression)]
    LTE       [reduce using rule 56 (booleanexpression)]
    GTE       [reduce using rule 56 (booleanexpression)]
    $default  reduce using rule 56 (booleanexpression)


State 106

   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression
   57                  | expression GTE expression .

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    ADD       [reduce using rule 57 (booleanexpression)]
    SUB       [reduce using rule 57 (booleanexpression)]
    MULT      [reduce using rule 57 (booleanexpression)]
    DIV       [reduce using rule 57 (booleanexpression)]
    MOD       [reduce using rule 57 (booleanexpression)]
    EQ        [reduce using rule 57 (booleanexpression)]
    NEQ       [reduce using rule 57 (booleanexpression)]
    LT        [reduce using rule 57 (booleanexpression)]
    GT        [reduce using rule 57 (booleanexpression)]
    LTE       [reduce using rule 57 (booleanexpression)]
    GTE       [reduce using rule 57 (booleanexpression)]
    $default  reduce using rule 57 (booleanexpression)


State 107

   23 declaration: INTEGERVAR IDENTIFIER ASSIGN integerexpression .
   41 expression: integerexpression .

    SEMICOLON  reduce using rule 23 (declaration)
    $default   reduce using rule 41 (expression)


State 108

   28 params: param COMMA params .

    $default  reduce using rule 28 (params)


State 109

   39 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    INTEGER     shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NOT         shift, and go to state 46
    L_PAREN     shift, and go to state 47

    function_call      go to state 48
    expression         go to state 114
    integerexpression  go to state 50
    booleanexpression  go to state 51
    arrayexpression    go to state 52


State 110

   25 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL . INTEGER R_SQUARE_BRACKET

    INTEGER  shift, and go to state 115


State 111

   32 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE . statements RBRACE
   33             | IF L_PAREN booleanexpression R_PAREN LBRACE . statements RBRACE else_statement

    IDENTIFIER  shift, and go to state 17
    ARRAY       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25
    INTEGERVAR  shift, and go to state 26

    $default  reduce using rule 11 (statements)

    statements        go to state 116
    statement         go to state 28
    declaration       go to state 29
    function_call     go to state 30
    if_statement      go to state 31
    while_statement   go to state 32
    return_statement  go to state 33
    assign_statement  go to state 34


State 112

   35 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE . statements RBRACE

    IDENTIFIER  shift, and go to state 17
    ARRAY       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25
    INTEGERVAR  shift, and go to state 26

    $default  reduce using rule 11 (statements)

    statements        go to state 117
    statement         go to state 28
    declaration       go to state 29
    function_call     go to state 30
    if_statement      go to state 31
    while_statement   go to state 32
    return_statement  go to state 33
    assign_statement  go to state 34


State 113

   59 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET .

    $default  reduce using rule 59 (arrayexpression)


State 114

   39 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .
   45 integerexpression: expression . ADD expression
   46                  | expression . SUB expression
   47                  | expression . MULT expression
   48                  | expression . DIV expression
   49                  | expression . MOD expression
   52 booleanexpression: expression . EQ expression
   53                  | expression . NEQ expression
   54                  | expression . LT expression
   55                  | expression . GT expression
   56                  | expression . LTE expression
   57                  | expression . GTE expression

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    EQ    shift, and go to state 81
    NEQ   shift, and go to state 82
    LT    shift, and go to state 83
    GT    shift, and go to state 84
    LTE   shift, and go to state 85
    GTE   shift, and go to state 86

    $default  reduce using rule 39 (assign_statement)


State 115

   25 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 118


State 116

   32 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements . RBRACE
   33             | IF L_PAREN booleanexpression R_PAREN LBRACE statements . RBRACE else_statement

    RBRACE  shift, and go to state 119


State 117

   35 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 120


State 118

   25 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET .

    $default  reduce using rule 25 (declaration)


State 119

   32 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE .
   33             | IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE . else_statement

    ELSE  shift, and go to state 121

    $default  reduce using rule 32 (if_statement)

    else_statement  go to state 122


State 120

   35 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE .

    $default  reduce using rule 35 (while_statement)


State 121

   34 else_statement: ELSE . LBRACE statements RBRACE

    LBRACE  shift, and go to state 123


State 122

   33 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE else_statement .

    $default  reduce using rule 33 (if_statement)


State 123

   34 else_statement: ELSE LBRACE . statements RBRACE

    IDENTIFIER  shift, and go to state 17
    ARRAY       shift, and go to state 18
    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    CONTINUE    shift, and go to state 21
    BREAK       shift, and go to state 22
    GET         shift, and go to state 23
    PRINT       shift, and go to state 24
    RETURN      shift, and go to state 25
    INTEGERVAR  shift, and go to state 26

    $default  reduce using rule 11 (statements)

    statements        go to state 124
    statement         go to state 28
    declaration       go to state 29
    function_call     go to state 30
    if_statement      go to state 31
    while_statement   go to state 32
    return_statement  go to state 33
    assign_statement  go to state 34


State 124

   34 else_statement: ELSE LBRACE statements . RBRACE

    RBRACE  shift, and go to state 125


State 125

   34 else_statement: ELSE LBRACE statements RBRACE .

    $default  reduce using rule 34 (else_statement)
