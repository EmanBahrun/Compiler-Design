Nonterminals useless in grammar

   symbol
   declarations


Terminals unused in grammar

   TRUE
   FALSE
   COLON


Rules useless in grammar

   59 symbol: IDENTIFIER
   60       | INTEGER


State 64 conflicts: 11 shift/reduce
State 93 conflicts: 11 shift/reduce
State 94 conflicts: 11 shift/reduce
State 95 conflicts: 11 shift/reduce
State 96 conflicts: 11 shift/reduce
State 97 conflicts: 11 shift/reduce
State 98 conflicts: 11 shift/reduce
State 99 conflicts: 11 shift/reduce
State 100 conflicts: 11 shift/reduce
State 101 conflicts: 11 shift/reduce
State 102 conflicts: 11 shift/reduce
State 103 conflicts: 11 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION function_indentifier L_PAREN arguments R_PAREN LBRACE statements RBRACE

    5 arguments: %empty
    6          | argument COMMA arguments
    7          | argument

    8 argument: INTEGERVAR IDENTIFIER

    9 statements: %empty
   10           | statement statements

   11 statement: declaration SEMICOLON
   12          | function_call SEMICOLON
   13          | if_statement
   14          | while_statement
   15          | return_statement SEMICOLON
   16          | assign_statement SEMICOLON
   17          | CONTINUE SEMICOLON
   18          | BREAK SEMICOLON
   19          | PRINT expression SEMICOLON
   20          | GET IDENTIFIER SEMICOLON

   21 declaration: INTEGERVAR IDENTIFIER ASSIGN integerexpression
   22            | INTEGERVAR IDENTIFIER
   23            | ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

   24 function_call: IDENTIFIER L_PAREN params R_PAREN

   25 params: %empty
   26       | param COMMA params
   27       | param

   28 param: INTEGER
   29      | IDENTIFIER

   30 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE
   31             | IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE else_statement

   32 else_statement: ELSE LBRACE statements RBRACE

   33 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE

   34 return_statement: RETURN
   35                 | RETURN expression

   36 assign_statement: IDENTIFIER ASSIGN expression
   37                 | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

   38 expression: IDENTIFIER
   39           | integerexpression
   40           | booleanexpression
   41           | arrayexpression

   42 integerexpression: INTEGER
   43                  | expression ADD expression
   44                  | expression SUB expression
   45                  | expression MULT expression
   46                  | expression DIV expression
   47                  | expression MOD expression
   48                  | L_PAREN expression R_PAREN
   49                  | function_call

   50 booleanexpression: expression EQ expression
   51                  | expression NEQ expression
   52                  | expression LT expression
   53                  | expression GT expression
   54                  | expression LTE expression
   55                  | expression GTE expression
   56                  | NOT expression

   57 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET

   58 function_indentifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
ARRAY (259) 23
INTEGERVAR (260) 8 21 22
ARRAYFILL (261) 23
RETURN (262) 34 35
SEMICOLON (263) 11 12 15 16 17 18 19 20
COMMA (264) 6 26
IF (265) 30 31
ELSE (266) 32
WHILE (267) 33
TRUE (268)
FALSE (269)
CONTINUE (270) 17
BREAK (271) 18
GET (272) 20
PRINT (273) 19
NOT (274) 56
COLON (275)
L_PAREN (276) 4 24 30 31 33 48
R_PAREN (277) 4 24 30 31 33 48
L_SQUARE_BRACKET (278) 23 37 57
R_SQUARE_BRACKET (279) 23 37 57
ASSIGN (280) 21 23 36 37
LBRACE (281) 4 30 31 32 33
RBRACE (282) 4 30 31 32 33
ADD (283) 43
SUB (284) 44
MULT (285) 45
DIV (286) 46
MOD (287) 47
EQ (288) 50
NEQ (289) 51
LT (290) 52
GT (291) 53
LTE (292) 54
GTE (293) 55
INTEGER (294) 23 28 42
IDENTIFIER (295) 8 20 21 22 23 24 29 36 37 38 57 58


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
prog_start (42)
    on left: 1, on right: 0
functions (43)
    on left: 2 3, on right: 1 3
function (44)
    on left: 4, on right: 3
arguments (45)
    on left: 5 6 7, on right: 4 6
argument (46)
    on left: 8, on right: 6 7
statements (47)
    on left: 9 10, on right: 4 10 30 31 32 33
statement (48)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 10
declaration (49)
    on left: 21 22 23, on right: 11
function_call (50)
    on left: 24, on right: 12 49
params (51)
    on left: 25 26 27, on right: 24 26
param (52)
    on left: 28 29, on right: 26 27
if_statement (53)
    on left: 30 31, on right: 13
else_statement (54)
    on left: 32, on right: 31
while_statement (55)
    on left: 33, on right: 14
return_statement (56)
    on left: 34 35, on right: 15
assign_statement (57)
    on left: 36 37, on right: 16
expression (58)
    on left: 38 39 40 41, on right: 19 35 36 37 43 44 45 46 47 48 50
    51 52 53 54 55 56
integerexpression (59)
    on left: 42 43 44 45 46 47 48 49, on right: 21 39 57
booleanexpression (60)
    on left: 50 51 52 53 54 55 56, on right: 30 31 33 40
arrayexpression (61)
    on left: 57, on right: 41
function_indentifier (62)
    on left: 58, on right: 4


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . function_indentifier L_PAREN arguments R_PAREN LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 5

    function_indentifier  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   58 function_indentifier: IDENTIFIER .

    $default  reduce using rule 58 (function_indentifier)


State 6

    4 function: FUNCTION function_indentifier . L_PAREN arguments R_PAREN LBRACE statements RBRACE

    L_PAREN  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION function_indentifier L_PAREN . arguments R_PAREN LBRACE statements RBRACE

    INTEGERVAR  shift, and go to state 10

    $default  reduce using rule 5 (arguments)

    arguments  go to state 11
    argument   go to state 12


State 10

    8 argument: INTEGERVAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


State 11

    4 function: FUNCTION function_indentifier L_PAREN arguments . R_PAREN LBRACE statements RBRACE

    R_PAREN  shift, and go to state 14


State 12

    6 arguments: argument . COMMA arguments
    7          | argument .

    COMMA  shift, and go to state 15

    $default  reduce using rule 7 (arguments)


State 13

    8 argument: INTEGERVAR IDENTIFIER .

    $default  reduce using rule 8 (argument)


State 14

    4 function: FUNCTION function_indentifier L_PAREN arguments R_PAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 16


State 15

    6 arguments: argument COMMA . arguments

    INTEGERVAR  shift, and go to state 10

    $default  reduce using rule 5 (arguments)

    arguments  go to state 17
    argument   go to state 12


State 16

    4 function: FUNCTION function_indentifier L_PAREN arguments R_PAREN LBRACE . statements RBRACE

    ARRAY       shift, and go to state 18
    INTEGERVAR  shift, and go to state 19
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    CONTINUE    shift, and go to state 23
    BREAK       shift, and go to state 24
    GET         shift, and go to state 25
    PRINT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 9 (statements)

    statements        go to state 28
    statement         go to state 29
    declaration       go to state 30
    function_call     go to state 31
    if_statement      go to state 32
    while_statement   go to state 33
    return_statement  go to state 34
    assign_statement  go to state 35


State 17

    6 arguments: argument COMMA arguments .

    $default  reduce using rule 6 (arguments)


State 18

   23 declaration: ARRAY . IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 36


State 19

   21 declaration: INTEGERVAR . IDENTIFIER ASSIGN integerexpression
   22            | INTEGERVAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 37


State 20

   34 return_statement: RETURN .
   35                 | RETURN . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 34 (return_statement)

    function_call      go to state 42
    expression         go to state 43
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 21

   30 if_statement: IF . L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE
   31             | IF . L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE else_statement

    L_PAREN  shift, and go to state 47


State 22

   33 while_statement: WHILE . L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE

    L_PAREN  shift, and go to state 48


State 23

   17 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 24

   18 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 25

   20 statement: GET . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 51


State 26

   19 statement: PRINT . expression SEMICOLON

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 52
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 27

   24 function_call: IDENTIFIER . L_PAREN params R_PAREN
   36 assign_statement: IDENTIFIER . ASSIGN expression
   37                 | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN           shift, and go to state 53
    L_SQUARE_BRACKET  shift, and go to state 54
    ASSIGN            shift, and go to state 55


State 28

    4 function: FUNCTION function_indentifier L_PAREN arguments R_PAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 56


State 29

   10 statements: statement . statements

    ARRAY       shift, and go to state 18
    INTEGERVAR  shift, and go to state 19
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    CONTINUE    shift, and go to state 23
    BREAK       shift, and go to state 24
    GET         shift, and go to state 25
    PRINT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 9 (statements)

    statements        go to state 57
    statement         go to state 29
    declaration       go to state 30
    function_call     go to state 31
    if_statement      go to state 32
    while_statement   go to state 33
    return_statement  go to state 34
    assign_statement  go to state 35


State 30

   11 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 31

   12 statement: function_call . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 32

   13 statement: if_statement .

    $default  reduce using rule 13 (statement)


State 33

   14 statement: while_statement .

    $default  reduce using rule 14 (statement)


State 34

   15 statement: return_statement . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 35

   16 statement: assign_statement . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 36

   23 declaration: ARRAY IDENTIFIER . ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

    ASSIGN  shift, and go to state 62


State 37

   21 declaration: INTEGERVAR IDENTIFIER . ASSIGN integerexpression
   22            | INTEGERVAR IDENTIFIER .

    ASSIGN  shift, and go to state 63

    $default  reduce using rule 22 (declaration)


State 38

   56 booleanexpression: NOT . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 64
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 39

   48 integerexpression: L_PAREN . expression R_PAREN

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 65
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 40

   42 integerexpression: INTEGER .

    $default  reduce using rule 42 (integerexpression)


State 41

   24 function_call: IDENTIFIER . L_PAREN params R_PAREN
   38 expression: IDENTIFIER .
   57 arrayexpression: IDENTIFIER . L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 53
    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 38 (expression)


State 42

   49 integerexpression: function_call .

    $default  reduce using rule 49 (integerexpression)


State 43

   35 return_statement: RETURN expression .
   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    $default  reduce using rule 35 (return_statement)


State 44

   39 expression: integerexpression .

    $default  reduce using rule 39 (expression)


State 45

   40 expression: booleanexpression .

    $default  reduce using rule 40 (expression)


State 46

   41 expression: arrayexpression .

    $default  reduce using rule 41 (expression)


State 47

   30 if_statement: IF L_PAREN . booleanexpression R_PAREN LBRACE statements RBRACE
   31             | IF L_PAREN . booleanexpression R_PAREN LBRACE statements RBRACE else_statement

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 78
    integerexpression  go to state 44
    booleanexpression  go to state 79
    arrayexpression    go to state 46


State 48

   33 while_statement: WHILE L_PAREN . booleanexpression R_PAREN LBRACE statements RBRACE

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 78
    integerexpression  go to state 44
    booleanexpression  go to state 80
    arrayexpression    go to state 46


State 49

   17 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 17 (statement)


State 50

   18 statement: BREAK SEMICOLON .

    $default  reduce using rule 18 (statement)


State 51

   20 statement: GET IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 52

   19 statement: PRINT expression . SEMICOLON
   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    SEMICOLON  shift, and go to state 82
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MULT       shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71
    EQ         shift, and go to state 72
    NEQ        shift, and go to state 73
    LT         shift, and go to state 74
    GT         shift, and go to state 75
    LTE        shift, and go to state 76
    GTE        shift, and go to state 77


State 53

   24 function_call: IDENTIFIER L_PAREN . params R_PAREN

    INTEGER     shift, and go to state 83
    IDENTIFIER  shift, and go to state 84

    $default  reduce using rule 25 (params)

    params  go to state 85
    param   go to state 86


State 54

   37 assign_statement: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 87
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 55

   36 assign_statement: IDENTIFIER ASSIGN . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 88
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 56

    4 function: FUNCTION function_indentifier L_PAREN arguments R_PAREN LBRACE statements RBRACE .

    $default  reduce using rule 4 (function)


State 57

   10 statements: statement statements .

    $default  reduce using rule 10 (statements)


State 58

   11 statement: declaration SEMICOLON .

    $default  reduce using rule 11 (statement)


State 59

   12 statement: function_call SEMICOLON .

    $default  reduce using rule 12 (statement)


State 60

   15 statement: return_statement SEMICOLON .

    $default  reduce using rule 15 (statement)


State 61

   16 statement: assign_statement SEMICOLON .

    $default  reduce using rule 16 (statement)


State 62

   23 declaration: ARRAY IDENTIFIER ASSIGN . L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 89


State 63

   21 declaration: INTEGERVAR IDENTIFIER ASSIGN . integerexpression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 78
    integerexpression  go to state 90
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 64

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression
   56                  | NOT expression .

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 56 (booleanexpression)]
    SUB       [reduce using rule 56 (booleanexpression)]
    MULT      [reduce using rule 56 (booleanexpression)]
    DIV       [reduce using rule 56 (booleanexpression)]
    MOD       [reduce using rule 56 (booleanexpression)]
    EQ        [reduce using rule 56 (booleanexpression)]
    NEQ       [reduce using rule 56 (booleanexpression)]
    LT        [reduce using rule 56 (booleanexpression)]
    GT        [reduce using rule 56 (booleanexpression)]
    LTE       [reduce using rule 56 (booleanexpression)]
    GTE       [reduce using rule 56 (booleanexpression)]
    $default  reduce using rule 56 (booleanexpression)


State 65

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   48                  | L_PAREN expression . R_PAREN
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    R_PAREN  shift, and go to state 91
    ADD      shift, and go to state 67
    SUB      shift, and go to state 68
    MULT     shift, and go to state 69
    DIV      shift, and go to state 70
    MOD      shift, and go to state 71
    EQ       shift, and go to state 72
    NEQ      shift, and go to state 73
    LT       shift, and go to state 74
    GT       shift, and go to state 75
    LTE      shift, and go to state 76
    GTE      shift, and go to state 77


State 66

   57 arrayexpression: IDENTIFIER L_SQUARE_BRACKET . integerexpression R_SQUARE_BRACKET

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 78
    integerexpression  go to state 92
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 67

   43 integerexpression: expression ADD . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 93
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 68

   44 integerexpression: expression SUB . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 94
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 69

   45 integerexpression: expression MULT . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 95
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 70

   46 integerexpression: expression DIV . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 96
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 71

   47 integerexpression: expression MOD . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 97
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 72

   50 booleanexpression: expression EQ . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 98
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 73

   51 booleanexpression: expression NEQ . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 99
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 74

   52 booleanexpression: expression LT . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 100
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 75

   53 booleanexpression: expression GT . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 101
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 76

   54 booleanexpression: expression LTE . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 102
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 77

   55 booleanexpression: expression GTE . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 103
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 78

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77


State 79

   30 if_statement: IF L_PAREN booleanexpression . R_PAREN LBRACE statements RBRACE
   31             | IF L_PAREN booleanexpression . R_PAREN LBRACE statements RBRACE else_statement
   40 expression: booleanexpression .

    R_PAREN  shift, and go to state 104

    $default  reduce using rule 40 (expression)


State 80

   33 while_statement: WHILE L_PAREN booleanexpression . R_PAREN LBRACE statements RBRACE
   40 expression: booleanexpression .

    R_PAREN  shift, and go to state 105

    $default  reduce using rule 40 (expression)


State 81

   20 statement: GET IDENTIFIER SEMICOLON .

    $default  reduce using rule 20 (statement)


State 82

   19 statement: PRINT expression SEMICOLON .

    $default  reduce using rule 19 (statement)


State 83

   28 param: INTEGER .

    $default  reduce using rule 28 (param)


State 84

   29 param: IDENTIFIER .

    $default  reduce using rule 29 (param)


State 85

   24 function_call: IDENTIFIER L_PAREN params . R_PAREN

    R_PAREN  shift, and go to state 106


State 86

   26 params: param . COMMA params
   27       | param .

    COMMA  shift, and go to state 107

    $default  reduce using rule 27 (params)


State 87

   37 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression
   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    R_SQUARE_BRACKET  shift, and go to state 108
    ADD               shift, and go to state 67
    SUB               shift, and go to state 68
    MULT              shift, and go to state 69
    DIV               shift, and go to state 70
    MOD               shift, and go to state 71
    EQ                shift, and go to state 72
    NEQ               shift, and go to state 73
    LT                shift, and go to state 74
    GT                shift, and go to state 75
    LTE               shift, and go to state 76
    GTE               shift, and go to state 77


State 88

   36 assign_statement: IDENTIFIER ASSIGN expression .
   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    $default  reduce using rule 36 (assign_statement)


State 89

   23 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET . ARRAYFILL INTEGER R_SQUARE_BRACKET

    ARRAYFILL  shift, and go to state 109


State 90

   21 declaration: INTEGERVAR IDENTIFIER ASSIGN integerexpression .
   39 expression: integerexpression .

    SEMICOLON  reduce using rule 21 (declaration)
    $default   reduce using rule 39 (expression)


State 91

   48 integerexpression: L_PAREN expression R_PAREN .

    $default  reduce using rule 48 (integerexpression)


State 92

   39 expression: integerexpression .
   57 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 110

    $default  reduce using rule 39 (expression)


State 93

   43 integerexpression: expression . ADD expression
   43                  | expression ADD expression .
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 43 (integerexpression)]
    SUB       [reduce using rule 43 (integerexpression)]
    MULT      [reduce using rule 43 (integerexpression)]
    DIV       [reduce using rule 43 (integerexpression)]
    MOD       [reduce using rule 43 (integerexpression)]
    EQ        [reduce using rule 43 (integerexpression)]
    NEQ       [reduce using rule 43 (integerexpression)]
    LT        [reduce using rule 43 (integerexpression)]
    GT        [reduce using rule 43 (integerexpression)]
    LTE       [reduce using rule 43 (integerexpression)]
    GTE       [reduce using rule 43 (integerexpression)]
    $default  reduce using rule 43 (integerexpression)


State 94

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   44                  | expression SUB expression .
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 44 (integerexpression)]
    SUB       [reduce using rule 44 (integerexpression)]
    MULT      [reduce using rule 44 (integerexpression)]
    DIV       [reduce using rule 44 (integerexpression)]
    MOD       [reduce using rule 44 (integerexpression)]
    EQ        [reduce using rule 44 (integerexpression)]
    NEQ       [reduce using rule 44 (integerexpression)]
    LT        [reduce using rule 44 (integerexpression)]
    GT        [reduce using rule 44 (integerexpression)]
    LTE       [reduce using rule 44 (integerexpression)]
    GTE       [reduce using rule 44 (integerexpression)]
    $default  reduce using rule 44 (integerexpression)


State 95

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   45                  | expression MULT expression .
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 45 (integerexpression)]
    SUB       [reduce using rule 45 (integerexpression)]
    MULT      [reduce using rule 45 (integerexpression)]
    DIV       [reduce using rule 45 (integerexpression)]
    MOD       [reduce using rule 45 (integerexpression)]
    EQ        [reduce using rule 45 (integerexpression)]
    NEQ       [reduce using rule 45 (integerexpression)]
    LT        [reduce using rule 45 (integerexpression)]
    GT        [reduce using rule 45 (integerexpression)]
    LTE       [reduce using rule 45 (integerexpression)]
    GTE       [reduce using rule 45 (integerexpression)]
    $default  reduce using rule 45 (integerexpression)


State 96

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   46                  | expression DIV expression .
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 46 (integerexpression)]
    SUB       [reduce using rule 46 (integerexpression)]
    MULT      [reduce using rule 46 (integerexpression)]
    DIV       [reduce using rule 46 (integerexpression)]
    MOD       [reduce using rule 46 (integerexpression)]
    EQ        [reduce using rule 46 (integerexpression)]
    NEQ       [reduce using rule 46 (integerexpression)]
    LT        [reduce using rule 46 (integerexpression)]
    GT        [reduce using rule 46 (integerexpression)]
    LTE       [reduce using rule 46 (integerexpression)]
    GTE       [reduce using rule 46 (integerexpression)]
    $default  reduce using rule 46 (integerexpression)


State 97

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   47                  | expression MOD expression .
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 47 (integerexpression)]
    SUB       [reduce using rule 47 (integerexpression)]
    MULT      [reduce using rule 47 (integerexpression)]
    DIV       [reduce using rule 47 (integerexpression)]
    MOD       [reduce using rule 47 (integerexpression)]
    EQ        [reduce using rule 47 (integerexpression)]
    NEQ       [reduce using rule 47 (integerexpression)]
    LT        [reduce using rule 47 (integerexpression)]
    GT        [reduce using rule 47 (integerexpression)]
    LTE       [reduce using rule 47 (integerexpression)]
    GTE       [reduce using rule 47 (integerexpression)]
    $default  reduce using rule 47 (integerexpression)


State 98

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   50                  | expression EQ expression .
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 50 (booleanexpression)]
    SUB       [reduce using rule 50 (booleanexpression)]
    MULT      [reduce using rule 50 (booleanexpression)]
    DIV       [reduce using rule 50 (booleanexpression)]
    MOD       [reduce using rule 50 (booleanexpression)]
    EQ        [reduce using rule 50 (booleanexpression)]
    NEQ       [reduce using rule 50 (booleanexpression)]
    LT        [reduce using rule 50 (booleanexpression)]
    GT        [reduce using rule 50 (booleanexpression)]
    LTE       [reduce using rule 50 (booleanexpression)]
    GTE       [reduce using rule 50 (booleanexpression)]
    $default  reduce using rule 50 (booleanexpression)


State 99

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   51                  | expression NEQ expression .
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 51 (booleanexpression)]
    SUB       [reduce using rule 51 (booleanexpression)]
    MULT      [reduce using rule 51 (booleanexpression)]
    DIV       [reduce using rule 51 (booleanexpression)]
    MOD       [reduce using rule 51 (booleanexpression)]
    EQ        [reduce using rule 51 (booleanexpression)]
    NEQ       [reduce using rule 51 (booleanexpression)]
    LT        [reduce using rule 51 (booleanexpression)]
    GT        [reduce using rule 51 (booleanexpression)]
    LTE       [reduce using rule 51 (booleanexpression)]
    GTE       [reduce using rule 51 (booleanexpression)]
    $default  reduce using rule 51 (booleanexpression)


State 100

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   52                  | expression LT expression .
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 52 (booleanexpression)]
    SUB       [reduce using rule 52 (booleanexpression)]
    MULT      [reduce using rule 52 (booleanexpression)]
    DIV       [reduce using rule 52 (booleanexpression)]
    MOD       [reduce using rule 52 (booleanexpression)]
    EQ        [reduce using rule 52 (booleanexpression)]
    NEQ       [reduce using rule 52 (booleanexpression)]
    LT        [reduce using rule 52 (booleanexpression)]
    GT        [reduce using rule 52 (booleanexpression)]
    LTE       [reduce using rule 52 (booleanexpression)]
    GTE       [reduce using rule 52 (booleanexpression)]
    $default  reduce using rule 52 (booleanexpression)


State 101

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   53                  | expression GT expression .
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 53 (booleanexpression)]
    SUB       [reduce using rule 53 (booleanexpression)]
    MULT      [reduce using rule 53 (booleanexpression)]
    DIV       [reduce using rule 53 (booleanexpression)]
    MOD       [reduce using rule 53 (booleanexpression)]
    EQ        [reduce using rule 53 (booleanexpression)]
    NEQ       [reduce using rule 53 (booleanexpression)]
    LT        [reduce using rule 53 (booleanexpression)]
    GT        [reduce using rule 53 (booleanexpression)]
    LTE       [reduce using rule 53 (booleanexpression)]
    GTE       [reduce using rule 53 (booleanexpression)]
    $default  reduce using rule 53 (booleanexpression)


State 102

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   54                  | expression LTE expression .
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 54 (booleanexpression)]
    SUB       [reduce using rule 54 (booleanexpression)]
    MULT      [reduce using rule 54 (booleanexpression)]
    DIV       [reduce using rule 54 (booleanexpression)]
    MOD       [reduce using rule 54 (booleanexpression)]
    EQ        [reduce using rule 54 (booleanexpression)]
    NEQ       [reduce using rule 54 (booleanexpression)]
    LT        [reduce using rule 54 (booleanexpression)]
    GT        [reduce using rule 54 (booleanexpression)]
    LTE       [reduce using rule 54 (booleanexpression)]
    GTE       [reduce using rule 54 (booleanexpression)]
    $default  reduce using rule 54 (booleanexpression)


State 103

   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression
   55                  | expression GTE expression .

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    ADD       [reduce using rule 55 (booleanexpression)]
    SUB       [reduce using rule 55 (booleanexpression)]
    MULT      [reduce using rule 55 (booleanexpression)]
    DIV       [reduce using rule 55 (booleanexpression)]
    MOD       [reduce using rule 55 (booleanexpression)]
    EQ        [reduce using rule 55 (booleanexpression)]
    NEQ       [reduce using rule 55 (booleanexpression)]
    LT        [reduce using rule 55 (booleanexpression)]
    GT        [reduce using rule 55 (booleanexpression)]
    LTE       [reduce using rule 55 (booleanexpression)]
    GTE       [reduce using rule 55 (booleanexpression)]
    $default  reduce using rule 55 (booleanexpression)


State 104

   30 if_statement: IF L_PAREN booleanexpression R_PAREN . LBRACE statements RBRACE
   31             | IF L_PAREN booleanexpression R_PAREN . LBRACE statements RBRACE else_statement

    LBRACE  shift, and go to state 111


State 105

   33 while_statement: WHILE L_PAREN booleanexpression R_PAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 112


State 106

   24 function_call: IDENTIFIER L_PAREN params R_PAREN .

    $default  reduce using rule 24 (function_call)


State 107

   26 params: param COMMA . params

    INTEGER     shift, and go to state 83
    IDENTIFIER  shift, and go to state 84

    $default  reduce using rule 25 (params)

    params  go to state 113
    param   go to state 86


State 108

   37 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 114


State 109

   23 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL . INTEGER R_SQUARE_BRACKET

    INTEGER  shift, and go to state 115


State 110

   57 arrayexpression: IDENTIFIER L_SQUARE_BRACKET integerexpression R_SQUARE_BRACKET .

    $default  reduce using rule 57 (arrayexpression)


State 111

   30 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE . statements RBRACE
   31             | IF L_PAREN booleanexpression R_PAREN LBRACE . statements RBRACE else_statement

    ARRAY       shift, and go to state 18
    INTEGERVAR  shift, and go to state 19
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    CONTINUE    shift, and go to state 23
    BREAK       shift, and go to state 24
    GET         shift, and go to state 25
    PRINT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 9 (statements)

    statements        go to state 116
    statement         go to state 29
    declaration       go to state 30
    function_call     go to state 31
    if_statement      go to state 32
    while_statement   go to state 33
    return_statement  go to state 34
    assign_statement  go to state 35


State 112

   33 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE . statements RBRACE

    ARRAY       shift, and go to state 18
    INTEGERVAR  shift, and go to state 19
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    CONTINUE    shift, and go to state 23
    BREAK       shift, and go to state 24
    GET         shift, and go to state 25
    PRINT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 9 (statements)

    statements        go to state 117
    statement         go to state 29
    declaration       go to state 30
    function_call     go to state 31
    if_statement      go to state 32
    while_statement   go to state 33
    return_statement  go to state 34
    assign_statement  go to state 35


State 113

   26 params: param COMMA params .

    $default  reduce using rule 26 (params)


State 114

   37 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    NOT         shift, and go to state 38
    L_PAREN     shift, and go to state 39
    INTEGER     shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    function_call      go to state 42
    expression         go to state 118
    integerexpression  go to state 44
    booleanexpression  go to state 45
    arrayexpression    go to state 46


State 115

   23 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


State 116

   30 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements . RBRACE
   31             | IF L_PAREN booleanexpression R_PAREN LBRACE statements . RBRACE else_statement

    RBRACE  shift, and go to state 120


State 117

   33 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 121


State 118

   37 assign_statement: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .
   43 integerexpression: expression . ADD expression
   44                  | expression . SUB expression
   45                  | expression . MULT expression
   46                  | expression . DIV expression
   47                  | expression . MOD expression
   50 booleanexpression: expression . EQ expression
   51                  | expression . NEQ expression
   52                  | expression . LT expression
   53                  | expression . GT expression
   54                  | expression . LTE expression
   55                  | expression . GTE expression

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MULT  shift, and go to state 69
    DIV   shift, and go to state 70
    MOD   shift, and go to state 71
    EQ    shift, and go to state 72
    NEQ   shift, and go to state 73
    LT    shift, and go to state 74
    GT    shift, and go to state 75
    LTE   shift, and go to state 76
    GTE   shift, and go to state 77

    $default  reduce using rule 37 (assign_statement)


State 119

   23 declaration: ARRAY IDENTIFIER ASSIGN L_SQUARE_BRACKET ARRAYFILL INTEGER R_SQUARE_BRACKET .

    $default  reduce using rule 23 (declaration)


State 120

   30 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE .
   31             | IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE . else_statement

    ELSE  shift, and go to state 122

    $default  reduce using rule 30 (if_statement)

    else_statement  go to state 123


State 121

   33 while_statement: WHILE L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE .

    $default  reduce using rule 33 (while_statement)


State 122

   32 else_statement: ELSE . LBRACE statements RBRACE

    LBRACE  shift, and go to state 124


State 123

   31 if_statement: IF L_PAREN booleanexpression R_PAREN LBRACE statements RBRACE else_statement .

    $default  reduce using rule 31 (if_statement)


State 124

   32 else_statement: ELSE LBRACE . statements RBRACE

    ARRAY       shift, and go to state 18
    INTEGERVAR  shift, and go to state 19
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    CONTINUE    shift, and go to state 23
    BREAK       shift, and go to state 24
    GET         shift, and go to state 25
    PRINT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 9 (statements)

    statements        go to state 125
    statement         go to state 29
    declaration       go to state 30
    function_call     go to state 31
    if_statement      go to state 32
    while_statement   go to state 33
    return_statement  go to state 34
    assign_statement  go to state 35


State 125

   32 else_statement: ELSE LBRACE statements . RBRACE

    RBRACE  shift, and go to state 126


State 126

   32 else_statement: ELSE LBRACE statements RBRACE .

    $default  reduce using rule 32 (else_statement)
